Headline::::Satya Nadella and Manjul Bhargava on a Coding Secret



DateTime::::2015-05-27T00:17:00+05:30




                                The internet trinity of Steve Jobs, Bill Gates and Mark Zuckerberg all agree on a simple article of faith. Schoolchildren, college students and most everybody should learn to code because programming a computer "teaches you how to think", as Jobs bluntly put it. But many cognitive scientists today would argue that countless other forms of human activity such as tying knots on shoelaces, sorting bananas from mangoes, or reading stories also teach us to think. So what's so special about coding?
Well, some people in the business seem to have a wonderfully nuanced answer to this elementary question animating the multi-million dollar global enterprise of coding. Satya Nadella, current CEO of Microsoft, Manjul Bhargava, the Princeton math professor who won the Fields Medal in 2014 and Vikram Chandra, an Indian novelist who is a professor of creative writing at the University of California as well as a computer programmer, all draw our attention to a unique source of inspiration.
That common resource is the 'Indian poetic tradition'.
Nadella, known to be a supporter of tech-talent from India, is also an 'avid reader' of Indian poetry, including Urdu verses in translation. Implicitly identifying succinctness as a value in programming, he has reportedly stated: "You're trying to take something that can be described in many, many sentences and pages of prose, but you can convert it into a couple lines of poetry and you still get the essence, so it's that compression... the best code is poetry."
Bhargava, who rather charmingly confesses to escaping his classes in school, was taught math by his mother as a child at home. He now uses the syllabic rules for composing Sanskrit poetry proposed by the Jain scholar Hemachandra (11-12 century AD) to explain complex Fibonacci sequences and other mathematical patterns to his students.
Vikram Chandra in his non-fiction book 'Geek Sublime: the Beauty of Code and the Code of Beauty' compares the pleasures of writing code to the seductions of language as explained by grammarians such as Panini (circa, 4 BCE) and Abhinavagupta (circa, 10 AD). Poetry, as Chandra sees it, is not to be confused with code; however, it can marvellously illuminate the 'creative' processes by which computer programs are written.
What can we learn from these insights by 'global' Indians drawing on 'Indian traditions' about the intersections between poetic and programming codes?
Well, to begin with, we may recall that we've recently had some - not always super sophisticated - debates on the subject of India's past intellectual prowess. Some have opined that our invincible ancient wisdom led us to invent literally everything from A to Z - Aeroplanes to the Zero. At the other end of the spectrum, some dismiss the very idea that these hoary ideas could contribute anything relevant to the 'scientific temper' of modernity. To paraphrase Gandhi, then, the 'shout for shout' arguments in the current public sphere about 'our tradition' are very likely to deafen us.
Nadella, Bhargava and Chandra's commentaries help modulate these otherwise deafening debates. The intellectual uses to which they have put Indian texts - ancient, medieval, modern - show how relevant they still are. These works, they indicate, must be read with sane respect rather than utilized as mere rhetorical means to support extreme positions.
Some of these old texts in fact precisely teach us 'experimental attitude' and are precursors to what is trendily known these days as 'evidence-based' learning. Here's a fine example from the Upanishads. In it, Svetaketu Aruneya is asked by his father, the sage Uddalaka, whether he has learnt in his schooling to "see the unseeable, and know the unknowable." No, says Svetaketu. So his father gets him to mix some salt in water and asks him the next day whether he can see the salt. No, says Svetaku. Taste the water, commands his father. And, of course, the water is salty, though the salt's unseen. Then his father asks him to observe the great Nyagrodha tree. Where does it come from, asks the father. From a seed, answers Svetaketu. What's inside the seed? Nothing, says Svetaketu. Tat tvam asi, that thou art, declares Uddalaka triumphantly, 'proving' through demonstration that intangible laws might govern the bio-physical world. Now here's an approach modern scientists might applaud!  
By bringing together the writing of computer codes and poetry in a world where computers are increasingly part of the imaginative furniture of our lives, Nadella, Bhargava and Chandra, too, enhance our sense of wonder about the complex structure of our eternally 'virtual' yet 'real' environment.
I myself happen to teach IIT students who sometimes ask: What good does it do anyone to read a poem? Conversely, I train doctoral students in linguistics, psychology and literature who often abhor what they see as the 'reductionism' of the sciences. In this connection, preliminary results from studies I've begun to conduct among first-year bilinguals in humanities as well as engineering students fresh out of school appear to indicate that children from about age ten on could be taught to write poetry as well as computer codes together in a complementary rather than a compartmentalising fashion.
What do poetry and coding have in common?
Well, both rely on combining patterns and using signs in repetitive yet new ways each time. Analogy, harmony, balance and 'symbolic short-cuts' characterize both forms of 'meta-linguistic' activity. Both offer examples of puzzles that extend our imaginations in ways that are aesthetically pleasing as well as pragmatically satisfying. Both can be highly addictive. And the 'aha!' experience is common to both.
Poetry and coding, in short, teach us not only to 'problem-solve' but to do so in ways that can entail huge amounts of cognitive pleasure. Magically enhancing our everyday 'fingertip consciousness', they offer an exciting array of tools to enter a global e-world.  Nadella, Bhargava and Chandra thus each bring us fresh perspectives on the nature of creativity where 'two cultures' are nicely pulled together - Indian and 'western', science and art, virtual and real.A fun challenge now for Nadella, Bhargava, Chandra and everyone else!
Of the four haikus below, two are 'written' by a computer (coded by expert programmers) and two by real Japanese poets (in translation). You have to say which is which.
Hard to tell? Well, despair not! In informal tests I've conducted whether in the 'west' or in India, the rate of success on this question is generally about 50%, revealing how difficult it is to analyze the phenomenon of 'creativity'. Yet, taking our cue from Nadella, Bhargava and Chandra we can perhaps now start to seriously explore 'Asian' thought on the subject.
India is one of the most multilingual, populous and youthful countries in the world today with a rich cultural heritage stretching back over millennia. It is also widely recognized as a technology hub. These factors contribute hugely to the prismatic way in which creativity itself is conceptualized at the interfaces of technology, language, orality and performativity in our country.
A good measure of the impact of technological revolutions is their capacity to foster new modes of thought. Just as the Gutenberg print era once 'democratized' Europe and provided a key condition for the rise of genres like the novel and 'novel' conditions for re-conceptualizing 'universal' education, a crucial question now arises: Will today's e-technologies similarly generate 21st century textual and educational styles, new 'selfies of the mind'?
An important conversation about shared modes of creativity in our new e-habitats has, I believe, been initiated for us by Nadella, Bhargava and Chandra. Keeping up this dialogue could help us decipher 'who we are' not only as Indians but as world citizens. To echo the prescient Uddalaka: tat tvam asi.(Critical theorist and writer Rukmini Bhaya Nair is a professor at IIT Delhi. She is the author of several academic books and three volumes of poetry. Her research interests are in the areas of language use and cognition.)Disclaimer: The opinions expressed within this article are the personal opinions of the author. The facts and opinions appearing in the article do not reflect the views of NDTV and NDTV does not assume any responsibility or liability for the same.



Author::::<a href="http://social.ndtv.com/groups.php?id=681257" target="_blank">RIP Congress</a>

Comment::::<div class="com_user_text">
                            First of all, thank you for standing out from the NDTV opinion pundits crowd and writing an article which is not political.The desperation of congress party (being the sore losers they are) made me realise that I would never want to vote for them ever again due to their pathetic behaviour that continues till date and we all know will continue as long as there's anybody else doing a better job. <br/><br/>
Very informative and well written piece of article that deserves to be called one.<br/><br/>
If anyone at NDTV is reading, please encourage more such articles and not the politically motivated ones that constitute 90% of the stuff in the column at the moment. I know you probably get more clicks on such articles because people like to argue with strangers but trust me you are encouraging other regular visitors like me to look for an alternative for Indian news. Think about what you want to be known as "Fox News of India" or the "CNN".
                         </div>



Author::::<a href="http://social.ndtv.com/groups.php?id=420406" target="_blank">Siddharth</a>

Comment::::<div class="com_user_text">
                            An excellent editorial from NDTV after a long time.
                         </div>



Author::::<a href="http://social.ndtv.com/groups.php?id=701018" target="_blank">ggnsp</a>

Comment::::<div class="com_user_text">
                            Interesting perspective!
                         </div>



Author::::<a href="http://social.ndtv.com/groups.php?id=701062" target="_blank">ashwin</a>

Comment::::<div class="com_user_text">
                            Maybe I should think about the real reason behind the book of poetry and data structures guide sitting next to each other on my shelf. <br/>
Have to agree with most other comments; this is a stand-out piece, and, thanks for that.<br/>
Forwarding to my like-minded fellows as soon as I complete this!<br/>
PS: The "I" in samples 2,4 suggestive of a "human" poet ?
                         </div>



Author::::<i>Anonymous</i>

Comment::::<div class="com_user_text">
                            Whatever you do dream it !
                         </div>



Author::::<a href="http://social.ndtv.com/groups.php?id=701156" target="_blank">WhoCares</a>

Comment::::<div class="com_user_text">
                            I'd say 1 and 3 were written by human 2 and 4 weren't!
                         </div>



Author::::<a href="http://social.ndtv.com/groups.php?id=561490" target="_blank">Raju</a>

Comment::::<div class="com_user_text">
                            But the coding depends on design documents, nowadays the software tools auto generate code from software architecture models, coding editors have become intelligent. May be one can do code optimization and compare it with poetry, still coding comparison with poetry seems outdated.
                         </div>



Author::::<a href="http://social.ndtv.com/groups.php?id=701334" target="_blank">Kunal</a>

Comment::::<div class="com_user_text">
                            Wonderful article. One can always see examples of scientists and mathematicians engrossed in literature and poetry. If they would not be a composer they would be very well read in various forms of literature. It was always visible but not evident to me. The way you have summarized it is just beautiful. Thank you.
                         </div>



